{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/hero/hero.component.ts","./src/app/hero/hero.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/services/numbersService.ts","./src/app/search/search.component.html","./src/app/search/search.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;ACR5D,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,SAAS,CAAC;KACnB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,wEAAyB;QACzB,sEAAqB;QACrB,wEAAyB;;;;;;;;;;;;;;;;;;;;ACKlB,MAAM,aAAa;IAKxB;QAHA,UAAK,GAAW,CAAC,CAAC;QAClB,cAAS,GAAW,CAAC,CAAC;QACtB,WAAM,GAAW,CAAC,CAAC;QAEjB,KAAK,CAAC,2CAA2C,CAAC;aACjD,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;aACzB,IAAI,CAAC,IAAI,CAAC,EAAE;YACX,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;YACxB,IAAI,CAAC,SAAS,GAAE,IAAI,CAAC,SAAS,CAAC;YAC/B,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC5B,CAAC,CAAC;IAEH,CAAC;IAEF,QAAQ;IACR,CAAC;;0EAjBU,aAAa;6FAAb,aAAa;QCP1B,yEAAkB;QACd,yEAAqB;QACjB,yEAAiB;QACb,yEAAkB;QACd,kEACJ;QAAA,4DAAM;QACN,yEAAmB;QACf,uDACJ;;QAAA,4DAAM;QACV,4DAAM;QAEN,yEAAiB;QACb,yEAAkB;QACd,uEACJ;QAAA,4DAAM;QACN,0EAAmB;QACf,wDACJ;;QAAA,4DAAM;QAEV,4DAAM;QACN,0EAAiB;QACb,0EAAkB;QACd,oEACJ;QAAA,4DAAM;QACN,0EAAmB;QACf,wDACJ;;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QAEV,4DAAM;;QAvBU,0DACJ;QADI,sJACJ;QAQI,0DACJ;QADI,2JACJ;QAQI,0DACJ;QADI,wJACJ;;;;;;;;;;;;;;ACzBZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6C;AACa;AAEX;AACa;AACN;AACK;AACC;;AAiBrD,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,CAAC,uEAAc,CAAC,YAJlB;YACP,uEAAa;YACb,0DAAW;SACZ;mIAIU,SAAS,mBAZlB,2DAAY;QACZ,wEAAe;QACf,kEAAa;QACb,wEAAe,aAGf,uEAAa;QACb,0DAAW;;;;;;;;;;;;;;;;;ACbR,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,4EAAuB;QACnB,wEAA0B;QAAA,4EAAiB;QAAA,4DAAK;QACpD,4DAAS;;;;;;;;;;;;;;ACFT;AAAA;AAAO,MAAM,cAAc;IAUvB,aAAa,CAAC,OAAe;QAEzB,KAAK,CAAC,kDAAkD,GAAC,OAAO,CAAC;aAChE,IAAI,CAAC,IAAI,GAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;aACxB,IAAI,CAAC,IAAI,GAAE;YACR,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC;YAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAClC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC;YACrC,IAAI,CAAC,cAAc,GAAE,IAAI,CAAC,cAAc,CAAC;YACzC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC;YAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACxC,CAAC,CAAC;IACN,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;;ICNO,yEAA0C;IACtC,uDACJ;IAAA,4DAAS;;;IADL,0DACJ;IADI,sFACJ;;ACVD,MAAM,eAAe;IAS1B,YAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;QAPjD,yBAAoB,GAAsC,EAAE,CAAC;QAC7D,cAAS,GAAa,EAAE,CAAC;QAGzB,WAAM,GAAW,OAAO,CAAC;QAIvB,KAAK,CAAC,iDAAiD,CAAC;aACrD,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;aACzB,IAAI,CAAC,QAAQ,CAAC,EAAE;YACf,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACzB,IAAI,OAAO,GAAG,EAAE,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC;gBAC9D,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE1C,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrB,CAAC,CAAC;IAEN,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE;IACrB,CAAC;IAED,YAAY;QACV,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAE1D,CAAC;IAED,IAAI,CAAC,EAAU;QACb,IAAI,EAAE,KAAK,OAAO,EAAE;YAClB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,EAAC,CAAC,CAAC,CAAC;YACvE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACpC,CAAC,CAAC;YAEF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,YAAY,EAAE,CAAC;SACrB;aAEI;YACH,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACtC,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI;oBACjB,OAAO,CAAC,CAAC,CAAC;gBACZ,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI;oBACjB,OAAO,CAAC,CAAC;;oBAET,OAAO,CAAC,CAAC;YACb,CAAC,CACA,CAAC;YACF,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACpC,CAAC,CAAC;YAEF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,YAAY,EAAE,CAAC;SAErB;IAGH,CAAC;;8EAlEU,eAAe;+FAAf,eAAe;QDT5B,yEAAqB;QAEjB,qEAAI;QAAA,6EAAkB;QAAA,4DAAK;QAC3B,yEAAmB;QACf,2EAA2F;QAAxB,sIAAS,SAAK,OAAO,CAAC,IAAC;QAA1F,4DAA2F;QAC3F,2EAAmB;QAAA,0EAAe;QAAA,4DAAQ;QAC9C,4DAAM;QAGN,yEAAmB;QACf,2EAAqF;QAA1B,sIAAS,SAAM,OAAO,CAAC,IAAE;QAApF,4DAAqF;QACrF,2EAAmB;QAAA,2EAAe;QAAA,4DAAQ;QAC9C,4DAAM;QAEV,4DAAM;QACN,0EAAoB;QAChB,6EAAiF;QAAxD,8LAA6B,kFAAW,kBAAc,IAAzB;QAClD,mHAES;QACb,4DAAS;QACb,4DAAM;QAIN,2EAAwB;QACpB,2EAAmB;QACf,2EAAmB;QAAA,uEAAW;QAAA,4DAAM;QACpC,sEAAiC;QACjC,2EAAoB;QAAA,wDAAsC;;QAAA,4DAAM;QACpE,4DAAM;QACN,2EAAmB;QACf,2EAAmB;QAAA,uEAAW;QAAA,4DAAM;QACpC,sEAAiC;QAEjC,2EAAoB;QAAA,wDAAsC;;QAAA,4DAAM;QACpE,4DAAM;QACN,2EAAmB;QACf,2EAAmB;QAAA,2EAAe;QAAA,4DAAM;QACxC,sEAAiC;QAEjC,2EAAoB;QAAA,wDAA0C;;QAAA,4DAAM;QACxE,4DAAM;QACN,2EAAmB;QACf,2EAAmB;QAAA,2EAAe;QAAA,4DAAM;QACxC,sEAAiC;QAEjC,2EAAoB;QAAA,wDAA0C;;QAAA,4DAAM;QACxE,4DAAM;QACN,2EAAmB;QACf,2EAAmB;QAAA,wEAAY;QAAA,4DAAM;QACrC,sEAAiC;QAEjC,2EAAoB;QAAA,wDAAuC;;QAAA,4DAAM;QACrE,4DAAM;QACN,2EAAmB;QACf,2EAAmB;QAAA,wEAAY;QAAA,4DAAM;QACrC,sEAAiC;QAEjC,2EAAoB;QAAA,wDAAuC;;QAAA,4DAAM;QACrE,4DAAM;QAGV,4DAAM;;QA/CuB,2DAA6B;QAA7B,wFAA6B;QACtB,0DAAY;QAAZ,kFAAY;QAYpB,0DAAsC;QAAtC,gKAAsC;QAMtC,0DAAsC;QAAtC,iKAAsC;QAMtC,0DAA0C;QAA1C,qKAA0C;QAM1C,0DAA0C;QAA1C,qKAA0C;QAM1C,0DAAuC;QAAvC,kKAAuC;QAMvC,0DAAuC;QAAvC,kKAAuC;;;;;;;;;;;;;;;;;;;;AE3DpB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid19';\n}\n","<app-header></app-header>\r\n<app-hero></app-hero>\r\n<app-search></app-search>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-hero',\n  templateUrl: './hero.component.html',\n  styleUrls: ['./hero.component.css']\n})\nexport class HeroComponent implements OnInit {\n\n  cases: number = 0;\n  recovered: number = 0;\n  deaths: number = 0;\n  constructor() {\n    fetch(\"https://corona.lmao.ninja/v3/covid-19/all\")\n    .then(data => data.json())\n    .then(data => {\n      this.cases = data.cases;\n      this.recovered =data.recovered;\n      this.deaths = data.deaths;\n    })\n    \n   }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"hero\">\n    <div class=\"content\">\n        <div class=\"row\">\n            <div class=\"name\">\n                Cases\n            </div>\n            <div class=\"value\">\n                {{cases | number}}\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"name\">\n                Recovered\n            </div>\n            <div class=\"value\">\n                {{recovered | number}}\n            </div>\n\n        </div>\n        <div class=\"row\">\n            <div class=\"name\">\n                Deaths\n            </div>\n            <div class=\"value\">\n                {{deaths | number}}\n            </div>\n        </div>\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HeroComponent } from './hero/hero.component';\nimport { NumbersService } from './services/numbersService';\nimport { SearchComponent } from './search/search.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HeroComponent,\n    SearchComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule\n  ],\n  providers: [NumbersService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<header class=\"header\">\n    <h1 class=\"header__title\">Covid-19 numbers </h1>\n</header>","export class NumbersService\r\n{\r\n    totalCases:number;\r\n    todayCases:number;\r\n    totalRecovered:number;\r\n    todayRecovered:number;\r\n    totalDeaths:number;\r\n    todayDeaths:number;\r\n\r\n    \r\n    updateNumbers(country: string): void\r\n    {\r\n        fetch(\"https://corona.lmao.ninja/v3/covid-19/countries/\"+country)\r\n        .then(data=> data.json())\r\n        .then(data=> {\r\n            this.totalCases = data.cases;\r\n            this.todayCases = data.todayCases;\r\n            this.totalRecovered = data.recovered;\r\n            this.todayRecovered= data.todayRecovered;\r\n            this.totalDeaths = data.deaths;\r\n            this.todayDeaths = data.todayDeaths;\r\n        })\r\n    }\r\n}","<div class=\"sort-by\">\r\n\r\n    <h3>Sort countries by:</h3>\r\n    <div class=\"names\">\r\n        <input checked type=\"radio\" id=\"names\" value=\"names\" name=\"sortby\" (click)=\"sort('names')\">\r\n        <label for=\"names\">Countries names</label>\r\n    </div>\r\n\r\n\r\n    <div class=\"cases\">\r\n        <input type=\"radio\" id=\"cases\" value=\"cases\" name=\"sortby\" (click)=\"sort( 'cases') \">\r\n        <label for=\"cases\">Number of cases</label>\r\n    </div>\r\n\r\n</div>\r\n<div class=\"search\">\r\n    <select class=\"dropdown\" [(ngModel)]=\"selectedCountry\" (change)=\"handleChange()\">\r\n        <option *ngFor=\"let country of countries\">\r\n            {{country}}\r\n        </option>\r\n    </select>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"data-grid \">\r\n    <div class=\"tile \">\r\n        <div class=\"name \">Total cases</div>\r\n        <div class=\"under-border \"></div>\r\n        <div class=\"value \">{{numbersService.totalCases | number}}</div>\r\n    </div>\r\n    <div class=\"tile \">\r\n        <div class=\"name \">Today cases</div>\r\n        <div class=\"under-border \"></div>\r\n\r\n        <div class=\"value \">{{numbersService.todayCases | number}}</div>\r\n    </div>\r\n    <div class=\"tile \">\r\n        <div class=\"name \">Total recovered</div>\r\n        <div class=\"under-border \"></div>\r\n\r\n        <div class=\"value \">{{numbersService.totalRecovered | number}}</div>\r\n    </div>\r\n    <div class=\"tile \">\r\n        <div class=\"name \">Today recovered</div>\r\n        <div class=\"under-border \"></div>\r\n\r\n        <div class=\"value \">{{numbersService.todayRecovered | number}}</div>\r\n    </div>\r\n    <div class=\"tile \">\r\n        <div class=\"name \">Total deahts</div>\r\n        <div class=\"under-border \"></div>\r\n\r\n        <div class=\"value \">{{numbersService.totalDeaths | number}}</div>\r\n    </div>\r\n    <div class=\"tile \">\r\n        <div class=\"name \">Today deaths</div>\r\n        <div class=\"under-border \"></div>\r\n\r\n        <div class=\"value \">{{numbersService.todayDeaths | number}}</div>\r\n    </div>\r\n\r\n\r\n</div>","import { stringify } from '@angular/compiler/src/util';\nimport { Component, OnInit } from '@angular/core';\nimport { NumbersService } from '../services/numbersService'\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  countriesWithNumbers: { name: string, cases: number }[] = [];\n  countries: string[] = [];\n  selectedCountry: string;\n\n  sortBy: string = \"names\";\n\n\n  constructor(public numbersService: NumbersService) {\n    fetch(\"https://corona.lmao.ninja/v3/covid-19/countries\")\n      .then(data => data.json())\n      .then(response => {\n        response.forEach(element => {\n          let country = { name: element.country, cases: element.cases };\n          this.countriesWithNumbers.push(country);\n\n        });\n\n        this.sort(\"names\");\n      })\n\n  }\n\n  ngOnInit(): void {\n    this.handleChange()\n  }\n\n  handleChange(): void {\n    this.numbersService.updateNumbers(this.selectedCountry);\n\n  }\n\n  sort(by: string): void {\n    if (by === \"cases\") {\n      this.countriesWithNumbers.sort((a, b) => { return b.cases - a.cases });\n      this.countries = [];\n      this.countriesWithNumbers.forEach(element => {\n        this.countries.push(element.name);\n      })\n\n      this.selectedCountry = this.countries[0];\n      this.handleChange();\n    }\n\n    else {\n      this.countriesWithNumbers.sort((a, b) => {\n        if (a.name < b.name)\n          return -1;\n        if (b.name > a.name)\n          return 1;\n        else\n          return 0;\n      }\n      );\n      this.countries = [];\n      this.countriesWithNumbers.forEach(element => {\n        this.countries.push(element.name);\n      })\n\n      this.selectedCountry = this.countries[0];\n      this.handleChange();\n\n    }\n\n\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}